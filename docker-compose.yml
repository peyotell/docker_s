services:
  webserver:    
    image: nginx:alpine
    container_name: ${PROJECT_NAME}-webserver
    working_dir: /application
    networks:
      - internal
    volumes:
      - ./:/application
      - ./docker_s/sourcefiles/nginx:/etc/nginx/conf.d
    ports:
      - "${NGINX_PORT}:80"
  php-fpm:
    build: 
      context: ./docker_s/sourcefiles/php-fpm
      args:
        UID: ${UID}
        GID: ${GID}
    environment:
      - PHP_WORKER_INSTALL_BCMATH=true  
      - UID=${UID}
      - GID=${GID}
    user: "${UID}:${GID}"   
    container_name: ${PROJECT_NAME}-php-fpm
    working_dir: /application
    volumes:
      - ./:/application
      - ./docker_s/sourcefiles/php-fpm/php-ini-overrides.ini:/usr/local/etc/php/conf.d/99-overrides.ini
    networks:
      - internal
  pgsql:    
    image: postgres:17
    container_name: ${PROJECT_NAME}-pgsql    
    environment:
      PGPASSWORD: '${DB_PASSWORD}'
      POSTGRES_DB: '${DB_DATABASE}'
      POSTGRES_USER: '${DB_USERNAME}'
      POSTGRES_PASSWORD: '${DB_PASSWORD}'
    volumes:
      - ./docker_s/sourcefiles/pgsql:/tmp
      - 'pg-data:/var/lib/postgresql/data'
    ports:
      - '${DB_PORT}:5432'
    networks:
      - internal
  # mysql:
  #   image: mysql:8.0
  #   container_name: ${PROJECT_NAME}-mysql
  #   environment:
  #     MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
  #     MYSQL_DATABASE: '${DB_DATABASE}'
  #     MYSQL_USER: '${DB_USERNAME}'
  #     MYSQL_PASSWORD: '${DB_PASSWORD}'
  #   volumes:
  #     - ./docker_s/sourcefiles/mysql:/docker-entrypoint-initdb.d
  #     - 'mysql-data:/var/lib/mysql'
  #   ports:
  #     - '${DB_PORT}:3306'
  #   networks:
  #     - internal

volumes:
  pg-data:
  # mysql-data:
    driver: local
networks:
  internal:
    driver: bridge
